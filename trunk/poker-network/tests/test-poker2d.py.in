#!@PYTHON@
# -*- mode: python -*-
#
# Copyright (C) 2007, 2008 Loic Dachary <loic@dachary.org>
# Copyright (C) 2006 Mekensleep
#
# Mekensleep
# 24 rue vieille du temple
# 75004 Paris
#       licensing@mekensleep.com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Authors:
#  Johan Euphrosine <johan@mekensleep.com>
#

import unittest
import sys
sys.path.insert(0, "@top_srcdir@")
sys.path.insert(0, "..")
sys.path.insert(0, "@top_srcdir@/pokerclient2d")
sys.path.insert(0, "../pokerclient2d/.libs")

import poker2d
import platform

class MainMockup:    
    def __init__(self, config, settings):
        MainMockup.instance = self
        self.settings = settings
    def configOk(self):
        pass

from pokerui.pokerinterface import PokerInterface
def updateMenuMockup(instance, settings):
    pass
PokerInterface.updateMenu = updateMenuMockup
class PokerClientFactory2DMockup(poker2d.PokerClientFactory2D):
    initDisplayCount = 0
    def __init__(self):
        class SettingsMockup:
            path = ""
            def headerGetInt(self, path):
                return 0
            def headerGet(self, path):
                if path == '/settings/data/@path':
                    return '@top_srcdir@/pokerclient2d/data'
                elif path == '/settings/@verbose':
                    return "0"
                elif path == '/sequence/chips':
                    return "0 1 2 3"
                return ""
            def headerGetProperties(self, path):
                return {0:{'position':0, 'serial':0,'currency_serial':0},'currency_serial':0}
            def notifyUpdates(self, updated):
                pass
        poker2d.PokerClientFactory2D.__init__(self, self, settings = SettingsMockup(), config = SettingsMockup())
    def initDisplay(self):
        self.initDisplayCount += 1


class Poker2DTestCase(unittest.TestCase):
    def testConfigFileOnWindows(self):
        poker2d.Main = MainMockup
        system = platform.system
        platform.system = lambda : "Windows"
        os.environ["APPDATA"] = "conf"
        poker2d.run("", None, None)
        self.assertEqual(MainMockup.instance.settings, "conf/poker2d/poker2d.xml")
        platform.system = system
    def testPokerClientFactory2D(self):
        client = PokerClientFactory2DMockup()
        self.assertEqual(1, client.initDisplayCount)

if __name__ == '__main__':
    unittest.main()

# Interpreted by emacs
# Local Variables:
# compile-command: "( cd .. ; ./config.status tests/test-poker2d.py ) ; ( cd ../tests ; make TESTS='test-poker2d.py' check )"
# End:
