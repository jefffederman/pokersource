#!@PYTHON@
# -*- mode: python -*-
#
# Copyright (C) 2006 Mekensleep
#
# Mekensleep
# 24 rue vieille du temple
# 75004 Paris
#       licensing@mekensleep.com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Authors:
#  Loic Dachary <loic@gnu.org>
#

import sys, os
sys.path.insert(0, "@top_srcdir@")
sys.path.insert(0, "..")

from twisted.trial import unittest, runner, reporter
import twisted.internet.base
from twisted.internet import reactor

twisted.internet.base.DelayedCall.debug = True
import libxml2

from pokernetwork import pokerdatabase
from pokernetwork import pokernetworkconfig
from pokernetwork import version

settings_xml = """<?xml version="1.0" encoding="ISO-8859-1"?>
<server verbose="1">
  <database name="pokernetworktest" host="localhost" user="pokernetworktest" password="pokernetwork"
            root_user="root" root_password="" schema="@srcdir@/../../database/schema.sql" command="@MYSQL@" />
</server>
"""
            
class PokerDatabaseTestCase(unittest.TestCase):

    def destroyDb(self):
        os.system("@MYSQL@ -u root -e 'DROP DATABASE IF EXISTS pokernetworktest'")

    # -----------------------------------------------------------------------------------------------------
    def setUp(self):
        self.destroyDb()
        settings = pokernetworkconfig.Config([])
        settings.doc = libxml2.parseMemory(settings_xml, len(settings_xml))
        settings.header = settings.doc.xpathNewContext()
        self.db = pokerdatabase.PokerDatabase(settings)
    
    # -----------------------------------------------------------------------------------------------------    
    def tearDown(self):
        self.db.close()
        del self.db
        self.destroyDb()
        
    # -----------------------------------------------------------------------------------------------------    
    def test01_upgrade(self):
        self.db.setVersionInDatabase("0.0.0")
        self.db.version = version.Version("0.0.0")
        self.db.upgrade('@srcdir@/../../tests/test-pokerdatabase', False)

# -----------------------------------------------------------------------------------------------------
def GetTestSuite():
    suite = runner.TestSuite(PokerDatabaseTestCase)
    suite.addTest(unittest.makeSuite(PokerDatabaseTestCase))
    return suite
    
# -----------------------------------------------------------------------------------------------------
def GetTestedModule():
    return pokerdatabase
  
# -----------------------------------------------------------------------------------------------------
def Run():
    loader = runner.TestLoader()
#    loader.methodPrefix = "test03"
    suite = loader.loadClass(PokerDatabaseTestCase)
    return runner.TrialRunner(reporter.TextReporter,
#                              tracebackFormat='verbose',
                              tracebackFormat='default',
                              ).run(suite)
    
# -----------------------------------------------------------------------------------------------------
if __name__ == '__main__':
    if Run().wasSuccessful():
        sys.exit(0)
    else:
        sys.exit(1)

# Interpreted by emacs
# Local Variables:
# compile-command: "( cd .. ; ./config.status tests/test-pokerdatabase.py ) ; ( cd ../tests ; make COVERAGE_FILES='../pokernetwork/pokerdatabase.py' TESTS='coverage-reset test-pokerdatabase.py coverage-report' check )"
# End:
