#!@BASH@
# -*- sh -*-
#
# Copyright (C) 2008 Loic Dachary <loic@dachary.org>
# Copyright (C) 2006 Mekensleep <licensing@mekensleep.com>x
#                    24 rue vieille du temple, 75004 Paris
#
# This software's license gives you freedom; you can copy, convey,
# propagate, redistribute and/or modify this program under the terms of
# the GNU Affero General Public License (AGPL) as published by the Free
# Software Foundation (FSF), either version 3 of the License, or (at your
# option) any later version of the AGPL published by the FSF.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program in a file in the toplevel directory called
# "AGPLv3".  If not, see <http://www.gnu.org/licenses/>.
#
# Authors:
#  Loic Dachary <loic@dachary.org>
#
set -e

echo "RUNNING: $*" 

. ${top_srcdir}/tests/setupMysqlVariables

if ! $MYSQL_ROOT_CMD -e "show databases" >/dev/null 2>&1 ; then
    echo "skipped because $MYSQL_ROOT_CMD -e \"show databases\" fails"
    exit 0
fi
#
# User for currency test
#
echo "CREATE USER 'currency'@ '%' IDENTIFIED BY '********';" | $MYSQL_ROOT_CMD > /dev/null 2>&1 || true
echo "GRANT ALL PRIVILEGES ON * . * TO 'currency'@ '%' IDENTIFIED BY '********'" | $MYSQL_ROOT_CMD > /dev/null 2>&1 || true

: ${srcdir:=.}
export srcdir
: ${top_srcdir:=..}
export top_srcdir

#
# As of Fri Apr 21 16:48:04 CEST 2006, valgrind only works on python2.4 on Debian/unstable
# Don't "show-reachable" because poker-interface heavily relies on static variables
#
if [ "@VALGRIND@" -a "@PYTHON_VERSION@" = "2.4" ] ; then
    VALGRIND="@VALGRIND@ --quiet --suppressions=/usr/lib/valgrind/debian.supp --suppressions=/usr/lib/valgrind/xfree-4.supp --suppressions=${srcdir}/poker-interface-sid.supp --num-callers=50 --leak-check=full"
fi

#
# For some reason php5 is unhappy if TZ is not set.
#
if [ -z "$TZ" ]; then
    export TZ=Europe/Paris
fi

DEFAULT_COVERAGE_FILES=$(echo ${top_srcdir}/poker{network,ui,client2d}/*.py) 
: ${COVERAGE_FILES:=$DEFAULT_COVERAGE_FILES}

COVERAGE_100_PERCENT="
../pokerclient2d/__init__
../pokernetwork/__init__
../pokernetwork/pokerexplain
../pokernetwork/pokergameclient
../pokernetwork/pokernetworkconfig
../pokernetwork/pokerclientpackets
../pokernetwork/currencyclient
../pokernetwork/pokerpackets
../pokernetwork/pokeravatar
../pokernetwork/pokertable
../pokernetwork/pokerdatabase
../pokernetwork/pokermemcache
../pokernetwork/pokerservice
../pokernetwork/pokerauth
../pokernetwork/protocol
../pokernetwork/server
../pokernetwork/client
../pokernetwork/pokercashier
../pokernetwork/pokerauthmysql
../pokernetwork/user
../pokernetwork/userstats
../pokernetwork/attrpack
../pokernetwork/tourneyattrs
../pokernetwork/pokersite
../pokernetwork/packets
../pokernetwork/version
../pokerui/__init__
"

case "$1" in 

*coverage-reset) @PYTHON@ ${srcdir}/coverage.py -e ;;

*coverage-report) 
        echo 
        echo "Before commiting a modification to the code, check all lines"
        echo "modified or added are covered by the tests."
        echo "cd /tmp ; svn co svn+ssh://loic@svn.gna.org/svn/pokersource/trunk/poker-network"
        echo "cd poker-network ; autoreconf -fi ; ./configure ; make check"
        echo "diff -ru tests/annotated /usr/src/pokersource/poker-network/tests/annotated | grep '^\+!'"
        echo 
        output=$( @PYTHON@ ${srcdir}/coverage.py -m -r ${COVERAGE_FILES} )
        rm -fr annotated ; mkdir annotated
        @PYTHON@ ${srcdir}/coverage.py -a -d annotated ${COVERAGE_FILES}
        echo "$output"
        for file in ${COVERAGE_100_PERCENT} ; do
            if echo "$output" | grep "$file" > /dev/null ; then
                if ! echo "$output" | grep "$file.*100%" > /dev/null ; then
                    echo "FAIL: tests do not cover 100% of the $file code"
                    exit 1
                fi
            fi
        done
        ;;

*upgrade) ./upgrade ;;

*poker-interface) 
        FONTPATHS="/usr/share/fonts/X11/misc /usr/share/X11/fonts/misc"
        fontpath_found=false
        for fontpath in $FONTPATHS ; do
            [ -d $fontpath ] && fontpath_found=true
        done
        INTERFACE_PORT=19579
        if [ "@XVFB@" ] && $fontpath_found ; then
            export DISPLAY=:20
            killall -9 @XVFB@ 2> /dev/null || /bin/true
            sleep 1
	    # -fbdir framebuffer
            @XVFB@ ${DISPLAY} -ac -nolisten TCP -screen 0 1024x768x24 &
            xvfb_pid=$!
            if [ -z "$xvfb_pid" ] ; then
                echo "there is a problem to start Xvfb (ignored)"
            fi
            @PYTHON@ ${srcdir}/test-poker-interface.py --verbose 1 --port ${INTERFACE_PORT} &
            testpid=$!
            killbackground="kill -9 $testpid; killall -9 @XVFB@"
            trap "$killbackground ; exit 1" INT QUIT
            trap "$killbackground" EXIT
            sleep 2
            $VALGRIND ../pokerclient2d/poker-interface --port ${INTERFACE_PORT} --datadir=${top_srcdir}/pokerclient2d/data --gtkrc=${top_srcdir}/pokerclient2d/data/Aero/gtkrc --glade=${top_srcdir}/pokerclient2d/data/interface/interface.glade
        else
            echo "skip $1 because Xvfb is not known or none of the $FONTPATHS directories exist"
        fi
        ;;

*pokerdisplay2d.py|*gamewindow.py|*svg2gtk.py|*poker2d.py|*unittestmain) 
        export GLADE_FILE=@top_srcdir@/pokerclient2d/data/interface/interface.glade
        FONTPATH=/usr/share/fonts/X11/misc
        INTERFACE_PORT=19579
        if [ "@XVFB@" -a -d "$FONTPATH" ] ; then
            export DISPLAY=:21
            killall -9 @XVFB@ 2> /dev/null || /bin/true
            sleep 1
	    # -fbdir framebuffer
            @XVFB@ ${DISPLAY} -ac -nolisten TCP -screen 0 1024x768x24 &
            xvfb_pid=$!
            if [ -z "$xvfb_pid" ] ; then
                echo "there is a problem to start Xvfb (ignored)"
            fi
            if expr "$1" : ".*.py" > /dev/null ; then
                sleep 2
                @PYTHON@ -u ${srcdir}/coverage.py -x "$1"
            else
                ./$1
            fi
            killall -9 @XVFB@
        else
            echo "skip $1 because Xvfb is not known or $FONTPATH is not a directory"
        fi
        ;;

*.php) 
        file=$(basename $1)
        mkdir -p phpunit/$file
        @PHP@ -d zend_extension=$(pecl config-get ext_dir)/xdebug.so @PHPUNIT@ --report phpunit/$file $(basename $file .php)
        ;;


*.py)   @PYTHON@ -u ${srcdir}/coverage.py -x "$1" ;;
# shows all functions called
#*.py) pydb --fntrace --basename "$1" ;;

*) 
        echo unknown test $1
        exit 1
        ;;
esac

