<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
//     Copyright (C) 2008 Bruno Garnier <bruno.garnier@gmail.com>
//
//     This program is free software: you can redistribute it and/or modify
//     it under the terms of the GNU General Public License as published by
//     the Free Software Foundation, either version 3 of the License, or
//     (at your option) any later version.
//
//     This program is distributed in the hope that it will be useful,
//     but WITHOUT ANY WARRANTY; without even the implied warranty of
//     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//     GNU General Public License for more details.
//
//     You should have received a copy of the GNU General Public License
//     along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
////////////////////////////////////////////////////////////////////////////////
-->

 <mx:Canvas 
 xmlns:mx="http://www.adobe.com/2006/mxml"
 initialize="init()"
 borderColor="red"
 borderStyle="solid"
 >

  <mx:Script>
 	<![CDATA[

 		import aspoker.com.bubsy.poker.client.PokerClient;
 	    import aspoker.com.bubsy.poker.client.model.User;
 		import aspoker.com.bubsy.poker.client.event.LoginEvent;
        
        private var _user:User = PokerClient.user;
        
 		private function loginSuccessfull(evt:LoginEvent):void 
 		{
 			this.currentState='cashierState';		
 		}
 		private function login():void
 		{
 			_user.setRole();
 			_user.loggin(username.text,password.text);
 		}
 		
	    private function logout():void
 		{
 		    _user.logout();
 		    this.currentState='LogginState';
 		}
 		
        private function loginRefused(evt:LoginEvent):void
 		{
 		    
 		    errorMessage.text=evt.message;
 		    this.currentState='LogginState';
 		}
	
 		private function init():void 
 		{
		    _user.addEventListener(
		        LoginEvent.onPacketAuthOk,
		        loginSuccessfull
		    ); 	
            
            _user.addEventListener(
		        LoginEvent.onPacketAuthRefused,
		        loginRefused
		   ); 
	        this.currentState='LogginState';
 		}
 	]]>
 </mx:Script>
 
 <mx:states>
  <mx:State name="cashierState">
       <mx:RemoveChild target="{loginCanvas}"/>
       <mx:SetProperty target="{this}" name="width" value="250"/>
       <mx:SetProperty target="{this}" name="height" value="60"/>
       <mx:AddChild relativeTo="{this}" position="lastChild">
            <mx:VBox id="registerCanvas">
                 <mx:Label text="Welcome!{username.text}" 
                      fontWeight="bold" fontStyle="italic" />
                 <mx:HBox>
					<mx:Button label="plocale" 
						click="PokerClient.user.plocale()" />
					<mx:Button label="getCashier" 
						click="PokerClient.user.userpersonalinfo()" /> 
					<mx:Button label="Log out" id="logoutButton"
                      click="logout()"/>
				</mx:HBox>
            </mx:VBox>
       </mx:AddChild>
  </mx:State>
  
    <mx:State name="LogginState">
       <mx:RemoveChild target="{loginCanvas}"/>
       <mx:SetProperty target="{this}" name="width" value="600"/>
       <mx:SetProperty target="{this}" name="height" value="60"/>
       <mx:AddChild relativeTo="{this}" position="lastChild">
           <mx:Canvas id="loginCanvas">
           <mx:Label id="errorMessage" color="red"/>
           <mx:Form id="loginForm" >
           		<mx:HBox>
	           		<mx:FormItem label="User name:" required="true" 
	           			direction="horizontal" >
    	            	<mx:TextInput id="username" width="100%" text="bruno"/>
        	    	</mx:FormItem>
            		<mx:FormItem  label="Password:" required="true" 
            			direction="horizontal">
                		<mx:TextInput id="password" width="100%" text="onurb"/>
            		</mx:FormItem>      
            		<mx:Button label="Login" id="button1" click="login()"/>      	           			
           		</mx:HBox>
       		</mx:Form>
       </mx:Canvas>
      </mx:AddChild>
   </mx:State>
  </mx:states>

  <mx:transitions>
      <mx:Transition fromState="LogginState" toState="cashierState">
           <mx:Sequence>
                <mx:RemoveChildAction target="{loginCanvas}"/>
                <mx:Resize target="{this}"/>
                <mx:AddChildAction target="{registerCanvas}"/>
           </mx:Sequence>
      </mx:Transition>
      
      <mx:Transition fromState="cashierState" toState="LogginState">
           <mx:Sequence>
                <mx:RemoveChildAction target="{registerCanvas}"/>
                <mx:Resize target="{this}"/>
                <mx:AddChildAction target="{loginCanvas}"/>
           </mx:Sequence>
      </mx:Transition>
 </mx:transitions>
 
 </mx:Canvas>
